version: '3.8'

services:
  aurora-api:
    build:
      context: .
      dockerfile: Dockerfile
    image: aurora-backend-service
    container_name: aurora-backend-service
    ports:
      - "3001:3001"
    volumes:
      - ./logs:/app/logs
      - ./src:/app/src
    environment:
      - PYTHONUNBUFFERED=1
      - REDIS_URL=redis://redis:6379/0
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

  redis:
    image: redis:7-alpine
    container_name: aurora-redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Redis Queue Worker
  worker:
    build:
      context: .
      dockerfile: Dockerfile
    image: aurora-backend-service
    command: python -c "from redis import Redis; from rq import Worker; Worker(['default'], connection=Redis.from_url('redis://redis:6379/0')).work()"
    depends_on:
      redis:
        condition: service_healthy
    environment:
      - REDIS_URL=redis://redis:6379/0
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    restart: unless-stopped

volumes:
  redis_data: 